@page "/products"

@inject IViewProductsByNameUseCase ViewProductsByNameUseCase;
@inject NavigationManager NavigationManager;

<h3>Product List</h3>
<br />

<ViewProductsComponent OnSearchProducts="OnSearchProducts"></ViewProductsComponent>

@if (_products != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Quantity</th>
                <th>Price</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in _products)
            {
               <ProductItemComponent 
                Product="product"
                OnProductDeleted="OnProductDeleted">
            </ProductItemComponent>
            }
        </tbody>
    </table>
    <br />
    <button type="button" class="btn btn-primary" @onclick="AddProduct">Add Product</button>
}

@code {
    private List<Product>? _products;

    protected override async Task OnInitializedAsync()
    {
        await ReloadProducts();
    }

    private void OnSearchProducts(List<Product> products)
    {
        _products = products;
    }

    private void AddProduct()
    {
        NavigationManager.NavigateTo("/addproduct");
    }

    private async Task OnProductDeleted()
    {
        await ReloadProducts();
    }

    private async Task ReloadProducts()
    {
         _products = (await ViewProductsByNameUseCase.ExecuteAsync("")).ToList();
    }
}
